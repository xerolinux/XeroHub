<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Convert on XeroLinux HQ</title><link>https://xerolinux.xyz/tags/convert/</link><description>Recent content in Convert on XeroLinux HQ</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 20 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://xerolinux.xyz/tags/convert/index.xml" rel="self" type="application/rss+xml"/><item><title>FFmpeg cheat sheet</title><link>https://xerolinux.xyz/posts/ffmpeg-cheat-sheet/</link><pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate><guid>https://xerolinux.xyz/posts/ffmpeg-cheat-sheet/</guid><description>&lt;p>This will come in useful to all of you Content Creators out there, who like doing things the G33ky &amp;amp; Nerdy way. I use it a lot. This is a a list of useful commands for the &lt;strong>FFmpeg&lt;/strong> command line tool.&lt;/p>
&lt;p>I would highly recommend you bookmark this page for later use.&lt;/p>


&lt;h1 class="relative group">FFmpeg cheat sheet 
 &lt;div id="ffmpeg-cheat-sheet" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#ffmpeg-cheat-sheet" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h1>
&lt;p>A list of useful commands for the FFmpeg command line tool.&lt;/p>
&lt;ul>
&lt;li>Download FFmpeg &amp;raquo; &lt;a href="https://www.ffmpeg.org/download.html" target="_blank">&lt;strong>Over Here&lt;/strong>&lt;/a>&lt;/li>
&lt;li>Full documentation &amp;raquo; &lt;a href="https://www.ffmpeg.org/ffmpeg.html" target="_blank">&lt;strong>Over Here&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>


&lt;h2 class="relative group">Basic conversion 
 &lt;div id="basic-conversion" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#basic-conversion" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 out.avi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 class="relative group">Remux an MKV file into MP4 
 &lt;div id="remux-an-mkv-file-into-mp4" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#remux-an-mkv-file-into-mp4" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mkv -c:v copy -c:a copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 class="relative group">High-quality encoding 
 &lt;div id="high-quality-encoding" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#high-quality-encoding" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h3>
&lt;p>Use the &lt;code>crf&lt;/code> (Constant Rate Factor) parameter to control the output quality. The lower crf, the higher the quality (range: 0-51). The default value is 23, and visually lossless compression corresponds to &lt;code>-crf 18&lt;/code>. Use the &lt;code>preset&lt;/code> parameter to control the speed of the compression process. Additional info &amp;raquo; &lt;a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank">&lt;strong>Over Here&lt;/strong>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -preset slower -crf &lt;span class="m">18&lt;/span> out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Trimming 
 &lt;div id="trimming" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#trimming" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Without re-encoding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -ss &lt;span class="o">[&lt;/span>start&lt;span class="o">]&lt;/span> -i in.mp4 -t &lt;span class="o">[&lt;/span>duration&lt;span class="o">]&lt;/span> -c copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank">&lt;code>-ss&lt;/code>&lt;/a> specifies the start time, e.g. &lt;code>00:01:23.000&lt;/code> or &lt;code>83&lt;/code> (in seconds)&lt;/li>
&lt;li>&lt;a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank">&lt;code>-t&lt;/code>&lt;/a> specifies the duration of the clip (same format).&lt;/li>
&lt;li>Recent &lt;code>ffmpeg&lt;/code> also has a flag to supply the end time with &lt;code>-to&lt;/code>.&lt;/li>
&lt;li>&lt;a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank">&lt;code>-c&lt;/code>&lt;/a> copy copies the first video, audio, and subtitle bitstream from the input to the output file without re-encoding them. This won&amp;rsquo;t harm the quality and make the command run within seconds.&lt;/li>
&lt;/ul>
&lt;p>With re-encoding:&lt;/p>
&lt;p>If you leave out the &lt;code>-c copy&lt;/code> option, &lt;code>ffmpeg&lt;/code> will automatically re-encode the output video and audio according to the format you chose. For high quality video and audio, read the &lt;a href="https://ffmpeg.org/trac/ffmpeg/wiki/x264EncodingGuide" target="_blank">x264 Encoding Guide&lt;/a> and the &lt;a href="http://ffmpeg.org/trac/ffmpeg/wiki/AACEncodingGuide" target="_blank">AAC Encoding Guide&lt;/a>, respectively.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -ss &lt;span class="o">[&lt;/span>start&lt;span class="o">]&lt;/span> -i in.mp4 -t &lt;span class="o">[&lt;/span>duration&lt;span class="o">]&lt;/span> -c:v libx264 -c:a aac -strict experimental -b:a 128k out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Mux video and audio from another video 
 &lt;div id="mux-video-and-audio-from-another-video" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#mux-video-and-audio-from-another-video" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>To copy the video from in0.mp4 and audio from in1.mp4:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in0.mp4 -i in1.mp4 -c copy -map 0:0 -map 1:1 -shortest out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>With &lt;a href="http://ffmpeg.org/ffmpeg.html#Stream-copy" target="_blank">-c copy&lt;/a> the streams will be &lt;code>stream copied&lt;/code>, not re-encoded, so there will be no quality loss. If you want to re-encode, see &lt;a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank">FFmpeg Wiki: H.264 Encoding Guide&lt;/a>.&lt;/li>
&lt;li>The &lt;code>-shortest&lt;/code> option will cause the output duration to match the duration of the shortest input stream.&lt;/li>
&lt;li>See the &lt;a href="http://ffmpeg.org/ffmpeg.html#Advanced-options" target="_blank">&lt;code>-map&lt;/code> option documentation&lt;/a> for more info.&lt;/li>
&lt;/ul>


&lt;h2 class="relative group">Concat demuxer 
 &lt;div id="concat-demuxer" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#concat-demuxer" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>First, make a text file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">file &lt;span class="s1">&amp;#39;in1.mp4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">file &lt;span class="s1">&amp;#39;in2.mp4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">file &lt;span class="s1">&amp;#39;in3.mp4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">file &lt;span class="s1">&amp;#39;in4.mp4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, run &lt;code>ffmpeg&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -f concat -i list.txt -c copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Delay audio/video 
 &lt;div id="delay-audiovideo" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#delay-audiovideo" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Delay video by 3.84 seconds:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 1:v -map 0:a -vcodec copy -acodec copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delay audio by 3.84 seconds:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 0:v -map 1:a -vcodec copy -acodec copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Burn subtitles 
 &lt;div id="burn-subtitles" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#burn-subtitles" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Use the &lt;a href="http://ffmpeg.org/ffmpeg.html#ass" target="_blank">libass&lt;/a> library (make sure your ffmpeg install has the library in the configuration &lt;code>--enable-libass&lt;/code>).&lt;/p>
&lt;p>First convert the subtitles to .ass format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i sub.srt sub.ass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add them using a video filter:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -vf &lt;span class="nv">ass&lt;/span>&lt;span class="o">=&lt;/span>sub.ass out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Extract the frames from a video 
 &lt;div id="extract-the-frames-from-a-video" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#extract-the-frames-from-a-video" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>To extract all frames from between 1 and 5 seconds, and also between 11 and 15 seconds:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -vf &lt;span class="k">select&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;between(t,1,5)+between(t,11,15)&amp;#39;&lt;/span> -vsync &lt;span class="m">0&lt;/span> out%d.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To extract one frame per second only:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -fps&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> -vsync &lt;span class="m">0&lt;/span> out%d.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Rotate a video 
 &lt;div id="rotate-a-video" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#rotate-a-video" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Rotate 90 clockwise:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mov -vf &lt;span class="s2">&amp;#34;transpose=1&amp;#34;&lt;/span> out.mov
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For the transpose parameter you can pass:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">0&lt;/span> &lt;span class="o">=&lt;/span> 90CounterCLockwise and Vertical Flip &lt;span class="o">(&lt;/span>default&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">1&lt;/span> &lt;span class="o">=&lt;/span> 90Clockwise
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">2&lt;/span> &lt;span class="o">=&lt;/span> 90CounterClockwise
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">3&lt;/span> &lt;span class="o">=&lt;/span> 90Clockwise and Vertical Flip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>-vf &amp;quot;transpose=2,transpose=2&amp;quot;&lt;/code> for 180 degrees.&lt;/p>


&lt;h2 class="relative group">Download &amp;ldquo;Transport Stream&amp;rdquo; video streams 
 &lt;div id="download-transport-stream-video-streams" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#download-transport-stream-video-streams" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;ol>
&lt;li>Locate the playlist file, e.g. using Chrome &amp;gt; F12 &amp;gt; Network &amp;gt; Filter: m3u8&lt;/li>
&lt;li>Download and concatenate the video fragments:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i &lt;span class="s2">&amp;#34;path_to_playlist.m3u8&amp;#34;&lt;/span> -c copy -bsf:a aac_adtstoasc out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you get a &amp;ldquo;Protocol &amp;lsquo;https not on whitelist &amp;lsquo;file,crypto&amp;rsquo;!&amp;rdquo; error, add the &lt;code>protocol_whitelist&lt;/code> option:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -protocol_whitelist &lt;span class="s2">&amp;#34;file,http,https,tcp,tls&amp;#34;&lt;/span> -i &lt;span class="s2">&amp;#34;path_to_playlist.m3u8&amp;#34;&lt;/span> -c copy -bsf:a aac_adtstoasc out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Mute some of the audio 
 &lt;div id="mute-some-of-the-audio" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#mute-some-of-the-audio" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>To replace the first 90 seconds of audio with silence:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -vcodec copy -af &lt;span class="s2">&amp;#34;volume=enable=&amp;#39;lte(t,90)&amp;#39;:volume=0&amp;#34;&lt;/span> out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To replace all audio between 1'20&amp;quot; and 1'30&amp;quot; with silence:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -vcodec copy -af &lt;span class="s2">&amp;#34;volume=enable=&amp;#39;between(t,80,90)&amp;#39;:volume=0&amp;#34;&lt;/span> out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Deinterlace 
 &lt;div id="deinterlace" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#deinterlace" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Deinterlacing using &amp;ldquo;yet another deinterlacing filter&amp;rdquo;.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -vf yadif out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Create a video slideshow from images 
 &lt;div id="create-a-video-slideshow-from-images" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#create-a-video-slideshow-from-images" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;p>Parameters: &lt;code>-r&lt;/code> marks the image framerate (inverse time of each image); &lt;code>-vf fps=25&lt;/code> marks the true framerate of the output.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf &lt;span class="nv">fps&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">25&lt;/span> -pix_fmt yuv420p out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Extract images from a video 
 &lt;div id="extract-images-from-a-video" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#extract-images-from-a-video" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;ul>
&lt;li>Extract all frames: &lt;code>ffmpeg -i input.mp4 thumb%04d.jpg -hide_banner&lt;/code>&lt;/li>
&lt;li>Extract a frame each second: &lt;code>ffmpeg -i input.mp4 -vf fps=1 thumb%04d.jpg -hide_banner&lt;/code>&lt;/li>
&lt;li>Extract only one frame: &lt;code>ffmpeg -i input.mp4 -ss 00:00:10.000 -vframes 1 thumb.jpg&lt;/code>&lt;/li>
&lt;/ul>


&lt;h2 class="relative group">Display the frame number on each frame 
 &lt;div id="display-the-frame-number-on-each-frame" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#display-the-frame-number-on-each-frame" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mov -vf &lt;span class="s2">&amp;#34;drawtext=fontfile=arial.ttf: text=%{n}: x=(w-tw)/2: y=h-(2*lh): fontcolor=white: box=1: boxcolor=0x00000099: fontsize=72&amp;#34;&lt;/span> -y out.mov
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 class="relative group">Metadata: Change the title 
 &lt;div id="metadata-change-the-title" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#metadata-change-the-title" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">ffmpeg -i in.mp4 -map_metadata -1 -metadata &lt;span class="nv">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;My Title&amp;#34;&lt;/span> -c:v copy -c:a copy out.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hope this helps anyone out there&amp;hellip;&lt;/p></description><content:encoded>&lt;![CDATA[<p>This will come in useful to all of you Content Creators out there, who like doing things the G33ky &amp; Nerdy way. I use it a lot. This is a a list of useful commands for the<strong>FFmpeg</strong> command line tool.</p><p>I would highly recommend you bookmark this page for later use.</p><h1 class="relative group">FFmpeg cheat sheet<div id="ffmpeg-cheat-sheet" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#ffmpeg-cheat-sheet" aria-label="Anchor">#</a></span></h1><p>A list of useful commands for the FFmpeg command line tool.</p><ul><li>Download FFmpeg &raquo;<a href="https://www.ffmpeg.org/download.html" target="_blank"><strong>Over Here</strong></a></li><li>Full documentation &raquo;<a href="https://www.ffmpeg.org/ffmpeg.html" target="_blank"><strong>Over Here</strong></a></li></ul><h2 class="relative group">Basic conversion<div id="basic-conversion" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#basic-conversion" aria-label="Anchor">#</a></span></h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 out.avi</span></span></code></pre></div><h3 class="relative group">Remux an MKV file into MP4<div id="remux-an-mkv-file-into-mp4" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#remux-an-mkv-file-into-mp4" aria-label="Anchor">#</a></span></h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mkv -c:v copy -c:a copy out.mp4</span></span></code></pre></div><h3 class="relative group">High-quality encoding<div id="high-quality-encoding" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#high-quality-encoding" aria-label="Anchor">#</a></span></h3><p>Use the<code>crf</code> (Constant Rate Factor) parameter to control the output quality. The lower crf, the higher the quality (range: 0-51). The default value is 23, and visually lossless compression corresponds to<code>-crf 18</code>. Use the<code>preset</code> parameter to control the speed of the compression process. Additional info &raquo;<a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank"><strong>Over Here</strong></a></p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -preset slower -crf<span class="m">18</span> out.mp4</span></span></code></pre></div><h2 class="relative group">Trimming<div id="trimming" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#trimming" aria-label="Anchor">#</a></span></h2><p>Without re-encoding:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -ss<span class="o">[</span>start<span class="o">]</span> -i in.mp4 -t<span class="o">[</span>duration<span class="o">]</span> -c copy out.mp4</span></span></code></pre></div><ul><li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-ss</code></a> specifies the start time, e.g.<code>00:01:23.000</code> or<code>83</code> (in seconds)</li><li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-t</code></a> specifies the duration of the clip (same format).</li><li>Recent<code>ffmpeg</code> also has a flag to supply the end time with<code>-to</code>.</li><li><a href="http://ffmpeg.org/ffmpeg-all.html#Main-options" target="_blank"><code>-c</code></a> copy copies the first video, audio, and subtitle bitstream from the input to the output file without re-encoding them. This won&rsquo;t harm the quality and make the command run within seconds.</li></ul><p>With re-encoding:</p><p>If you leave out the<code>-c copy</code> option,<code>ffmpeg</code> will automatically re-encode the output video and audio according to the format you chose. For high quality video and audio, read the<a href="https://ffmpeg.org/trac/ffmpeg/wiki/x264EncodingGuide" target="_blank">x264 Encoding Guide</a> and the<a href="http://ffmpeg.org/trac/ffmpeg/wiki/AACEncodingGuide" target="_blank">AAC Encoding Guide</a>, respectively.</p><p>For example:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -ss<span class="o">[</span>start<span class="o">]</span> -i in.mp4 -t<span class="o">[</span>duration<span class="o">]</span> -c:v libx264 -c:a aac -strict experimental -b:a 128k out.mp4</span></span></code></pre></div><h2 class="relative group">Mux video and audio from another video<div id="mux-video-and-audio-from-another-video" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#mux-video-and-audio-from-another-video" aria-label="Anchor">#</a></span></h2><p>To copy the video from in0.mp4 and audio from in1.mp4:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in0.mp4 -i in1.mp4 -c copy -map 0:0 -map 1:1 -shortest out.mp4</span></span></code></pre></div><ul><li>With<a href="http://ffmpeg.org/ffmpeg.html#Stream-copy" target="_blank">-c copy</a> the streams will be<code>stream copied</code>, not re-encoded, so there will be no quality loss. If you want to re-encode, see<a href="https://trac.ffmpeg.org/wiki/Encode/H.264" target="_blank">FFmpeg Wiki: H.264 Encoding Guide</a>.</li><li>The<code>-shortest</code> option will cause the output duration to match the duration of the shortest input stream.</li><li>See the<a href="http://ffmpeg.org/ffmpeg.html#Advanced-options" target="_blank"><code>-map</code> option documentation</a> for more info.</li></ul><h2 class="relative group">Concat demuxer<div id="concat-demuxer" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#concat-demuxer" aria-label="Anchor">#</a></span></h2><p>First, make a text file.</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">file<span class="s1">'in1.mp4'</span></span></span><span class="line"><span class="cl">file<span class="s1">'in2.mp4'</span></span></span><span class="line"><span class="cl">file<span class="s1">'in3.mp4'</span></span></span><span class="line"><span class="cl">file<span class="s1">'in4.mp4'</span></span></span></code></pre></div><p>Then, run<code>ffmpeg</code>:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -f concat -i list.txt -c copy out.mp4</span></span></code></pre></div><h2 class="relative group">Delay audio/video<div id="delay-audiovideo" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#delay-audiovideo" aria-label="Anchor">#</a></span></h2><p>Delay video by 3.84 seconds:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 1:v -map 0:a -vcodec copy -acodec copy out.mp4</span></span></code></pre></div><p>Delay audio by 3.84 seconds:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -itsoffset 3.84 -i in.mp4 -map 0:v -map 1:a -vcodec copy -acodec copy out.mp4</span></span></code></pre></div><h2 class="relative group">Burn subtitles<div id="burn-subtitles" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#burn-subtitles" aria-label="Anchor">#</a></span></h2><p>Use the<a href="http://ffmpeg.org/ffmpeg.html#ass" target="_blank">libass</a> library (make sure your ffmpeg install has the library in the configuration<code>--enable-libass</code>).</p><p>First convert the subtitles to .ass format:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i sub.srt sub.ass</span></span></code></pre></div><p>Then add them using a video filter:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf<span class="nv">ass</span><span class="o">=</span>sub.ass out.mp4</span></span></code></pre></div><h2 class="relative group">Extract the frames from a video<div id="extract-the-frames-from-a-video" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#extract-the-frames-from-a-video" aria-label="Anchor">#</a></span></h2><p>To extract all frames from between 1 and 5 seconds, and also between 11 and 15 seconds:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf<span class="k">select</span><span class="o">=</span><span class="s1">'between(t,1,5)+between(t,11,15)'</span> -vsync<span class="m">0</span> out%d.png</span></span></code></pre></div><p>To extract one frame per second only:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -fps<span class="o">=</span><span class="m">1</span> -vsync<span class="m">0</span> out%d.png</span></span></code></pre></div><h2 class="relative group">Rotate a video<div id="rotate-a-video" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#rotate-a-video" aria-label="Anchor">#</a></span></h2><p>Rotate 90 clockwise:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mov -vf<span class="s2">"transpose=1"</span> out.mov</span></span></code></pre></div><p>For the transpose parameter you can pass:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"><span class="nv">0</span><span class="o">=</span> 90CounterCLockwise and Vertical Flip<span class="o">(</span>default<span class="o">)</span></span></span><span class="line"><span class="cl"><span class="nv">1</span><span class="o">=</span> 90Clockwise</span></span><span class="line"><span class="cl"><span class="nv">2</span><span class="o">=</span> 90CounterClockwise</span></span><span class="line"><span class="cl"><span class="nv">3</span><span class="o">=</span> 90Clockwise and Vertical Flip</span></span></code></pre></div><p>Use<code>-vf "transpose=2,transpose=2"</code> for 180 degrees.</p><h2 class="relative group">Download &ldquo;Transport Stream&rdquo; video streams<div id="download-transport-stream-video-streams" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#download-transport-stream-video-streams" aria-label="Anchor">#</a></span></h2><ol><li>Locate the playlist file, e.g. using Chrome > F12 > Network > Filter: m3u8</li><li>Download and concatenate the video fragments:</li></ol><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i<span class="s2">"path_to_playlist.m3u8"</span> -c copy -bsf:a aac_adtstoasc out.mp4</span></span></code></pre></div><p>If you get a &ldquo;Protocol &lsquo;https not on whitelist &lsquo;file,crypto&rsquo;!&rdquo; error, add the<code>protocol_whitelist</code> option:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -protocol_whitelist<span class="s2">"file,http,https,tcp,tls"</span> -i<span class="s2">"path_to_playlist.m3u8"</span> -c copy -bsf:a aac_adtstoasc out.mp4</span></span></code></pre></div><h2 class="relative group">Mute some of the audio<div id="mute-some-of-the-audio" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#mute-some-of-the-audio" aria-label="Anchor">#</a></span></h2><p>To replace the first 90 seconds of audio with silence:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vcodec copy -af<span class="s2">"volume=enable='lte(t,90)':volume=0"</span> out.mp4</span></span></code></pre></div><p>To replace all audio between 1'20" and 1'30" with silence:</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vcodec copy -af<span class="s2">"volume=enable='between(t,80,90)':volume=0"</span> out.mp4</span></span></code></pre></div><h2 class="relative group">Deinterlace<div id="deinterlace" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#deinterlace" aria-label="Anchor">#</a></span></h2><p>Deinterlacing using &ldquo;yet another deinterlacing filter&rdquo;.</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -vf yadif out.mp4</span></span></code></pre></div><h2 class="relative group">Create a video slideshow from images<div id="create-a-video-slideshow-from-images" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#create-a-video-slideshow-from-images" aria-label="Anchor">#</a></span></h2><p>Parameters:<code>-r</code> marks the image framerate (inverse time of each image);<code>-vf fps=25</code> marks the true framerate of the output.</p><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf<span class="nv">fps</span><span class="o">=</span><span class="m">25</span> -pix_fmt yuv420p out.mp4</span></span></code></pre></div><h2 class="relative group">Extract images from a video<div id="extract-images-from-a-video" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#extract-images-from-a-video" aria-label="Anchor">#</a></span></h2><ul><li>Extract all frames:<code>ffmpeg -i input.mp4 thumb%04d.jpg -hide_banner</code></li><li>Extract a frame each second:<code>ffmpeg -i input.mp4 -vf fps=1 thumb%04d.jpg -hide_banner</code></li><li>Extract only one frame:<code>ffmpeg -i input.mp4 -ss 00:00:10.000 -vframes 1 thumb.jpg</code></li></ul><h2 class="relative group">Display the frame number on each frame<div id="display-the-frame-number-on-each-frame" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#display-the-frame-number-on-each-frame" aria-label="Anchor">#</a></span></h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mov -vf<span class="s2">"drawtext=fontfile=arial.ttf: text=%{n}: x=(w-tw)/2: y=h-(2*lh): fontcolor=white: box=1: boxcolor=0x00000099: fontsize=72"</span> -y out.mov</span></span></code></pre></div><h2 class="relative group">Metadata: Change the title<div id="metadata-change-the-title" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#metadata-change-the-title" aria-label="Anchor">#</a></span></h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">ffmpeg -i in.mp4 -map_metadata -1 -metadata<span class="nv">title</span><span class="o">=</span><span class="s2">"My Title"</span> -c:v copy -c:a copy out.mp4</span></span></code></pre></div><p>Hope this helps anyone out there&hellip;</p>
]]></content:encoded><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"/><item><title>Converseen, the batch image converter</title><link>https://xerolinux.xyz/posts/coverseen-img-convert/</link><pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate><guid>https://xerolinux.xyz/posts/coverseen-img-convert/</guid><description>

&lt;h3 class="relative group">This one such a time saver.. 
 &lt;div id="this-one-such-a-time-saver" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#this-one-such-a-time-saver" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h3>
&lt;p>&lt;strong>Converseen&lt;/strong> can do batch image conversion, apply similar alteration like rotation, resize, remove image metadata, let you ignore specific files if you import a collection. Save the output in many different formats (with specific saving parameters like jpg quality, replace transparent background with specific color). The only thing It misses, in my opinion (imo) to make it GOAT is the ability to add/apply imported watermarks/copyright footnotes. A feature that can help visual artist to prepare their images galleries for publication.&lt;/p>
&lt;p>Nonetheless it is already awesome because it helps convert files from annoying formats like .webp, switch .bmp into .png. in one click once the parameter are set.&lt;/p>


&lt;h3 class="relative group">Demo 
 &lt;div id="demo" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#demo" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h3>
&lt;p>There is a quick demo I found in french but if there is request for it I can post one in English later. I personally use this on the daily especially for posting on sites and whatnot.&lt;/p>


 
 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/IYydD3ohyFo?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div>



&lt;h3 class="relative group">Installing it 
 &lt;div id="installing-it" class="anchor">&lt;/div>
 
 &lt;span
 class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
 &lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
 style="text-decoration-line: none !important;" href="#installing-it" aria-label="Anchor">#&lt;/a>
 &lt;/span> 
 
&lt;/h3>
&lt;p>There are multiple ways to get it, be it from &lt;strong>Arch&lt;/strong> repos or &lt;strong>Flathub&lt;/strong>. I will be showing both methods, up to you to choose which you prefer&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Arch Repos :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">sudo pacman -S converseen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Flathub (Flatpak)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">flatpak install net.fasterland.converseen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;a id="github-bcb0d2da5009533c2e74cc81533f73ad" target="_blank" href="https://github.com/Faster3ck/Converseen" class="cursor-pointer">
 &lt;div
 class="w-full md:w-auto pt-3 p-5 border border-neutral-200 dark:border-neutral-700 border rounded-md shadow-2xl">

 &lt;div class="flex items-center">
 &lt;span class="text-2xl text-neutral-800 dark:text-neutral" style="margin-right:10px;">
 

 &lt;span class="relative block icon">
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512">&lt;path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"/>&lt;/svg>

 &lt;/span>


 &lt;/span>
 &lt;div
 id="github-bcb0d2da5009533c2e74cc81533f73ad-full_name"
 class="m-0 font-bold text-xl text-neutral-800 decoration-primary-500 hover:underline hover:underline-offset-2 dark:text-neutral">
 Faster3ck/Converseen
 &lt;/div>
 &lt;/div>

 &lt;p id="github-bcb0d2da5009533c2e74cc81533f73ad-description" class="m-0 mt-2 text-md text-neutral-800 dark:text-neutral">
 Converseen is a batch image converter and resizer
 &lt;/p>

 &lt;div class="m-0 mt-2 flex items-center">

 &lt;span class="mr-1 inline-block h-3 w-3 rounded-full"
 style="background-color: #f34b7d">&lt;/span>
 &lt;div class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
 C&amp;#43;&amp;#43; 
 &lt;/div>

 &lt;span class="text-md mr-1 text-neutral-800 dark:text-neutral">
 

 &lt;span class="relative block icon">
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">&lt;path fill="currentColor" d="M287.9 0C297.1 0 305.5 5.25 309.5 13.52L378.1 154.8L531.4 177.5C540.4 178.8 547.8 185.1 550.7 193.7C553.5 202.4 551.2 211.9 544.8 218.2L433.6 328.4L459.9 483.9C461.4 492.9 457.7 502.1 450.2 507.4C442.8 512.7 432.1 513.4 424.9 509.1L287.9 435.9L150.1 509.1C142.9 513.4 133.1 512.7 125.6 507.4C118.2 502.1 114.5 492.9 115.1 483.9L142.2 328.4L31.11 218.2C24.65 211.9 22.36 202.4 25.2 193.7C28.03 185.1 35.5 178.8 44.49 177.5L197.7 154.8L266.3 13.52C270.4 5.249 278.7 0 287.9 0L287.9 0zM287.9 78.95L235.4 187.2C231.9 194.3 225.1 199.3 217.3 200.5L98.98 217.9L184.9 303C190.4 308.5 192.9 316.4 191.6 324.1L171.4 443.7L276.6 387.5C283.7 383.7 292.2 383.7 299.2 387.5L404.4 443.7L384.2 324.1C382.9 316.4 385.5 308.5 391 303L476.9 217.9L358.6 200.5C350.7 199.3 343.9 194.3 340.5 187.2L287.9 78.95z"/>&lt;/svg>
 &lt;/span>


 &lt;/span>
 &lt;div id="github-bcb0d2da5009533c2e74cc81533f73ad-stargazers" class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
 397
 &lt;/div>

 &lt;span class="text-md mr-1 text-neutral-800 dark:text-neutral">
 

 &lt;span class="relative block icon">
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">&lt;path fill="currentColor" d="M80 104c13.3 0 24-10.7 24-24s-10.7-24-24-24S56 66.7 56 80s10.7 24 24 24zm80-24c0 32.8-19.7 61-48 73.3V192c0 17.7 14.3 32 32 32H304c17.7 0 32-14.3 32-32V153.3C307.7 141 288 112.8 288 80c0-44.2 35.8-80 80-80s80 35.8 80 80c0 32.8-19.7 61-48 73.3V192c0 53-43 96-96 96H256v70.7c28.3 12.3 48 40.5 48 73.3c0 44.2-35.8 80-80 80s-80-35.8-80-80c0-32.8 19.7-61 48-73.3V288H144c-53 0-96-43-96-96V153.3C19.7 141 0 112.8 0 80C0 35.8 35.8 0 80 0s80 35.8 80 80zm208 24c13.3 0 24-10.7 24-24s-10.7-24-24-24s-24 10.7-24 24s10.7 24 24 24zM248 432c0-13.3-10.7-24-24-24s-24 10.7-24 24s10.7 24 24 24s24-10.7 24-24z"/>&lt;/svg>
 &lt;/span>


 &lt;/span>
 &lt;div id="github-bcb0d2da5009533c2e74cc81533f73ad-forks" class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
 33
 &lt;/div>

 &lt;/div>

 &lt;/div>
 &lt;script>
 fetch("https://api.github.com/repos/Faster3ck/Converseen", {
 headers: new Headers({
 'User-agent': 'Mozilla/4.0 Custom User Agent'
 })
 })
 .then(response => response.json())
 .then(data => {
 document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-full_name').innerHTML = data.full_name;
 document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-description').innerHTML = data.description;
 document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-stargazers').innerHTML = data.stargazers_count;
 document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-forks').innerHTML = data.forks;
 })
 .catch(error => console.error(error))
 &lt;/script>
&lt;/a>
&lt;p>Have fun :heart:&lt;/p></description><content:encoded>&lt;![CDATA[<h3 class="relative group">This one such a time saver..<div id="this-one-such-a-time-saver" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#this-one-such-a-time-saver" aria-label="Anchor">#</a></span></h3><p><strong>Converseen</strong> can do batch image conversion, apply similar alteration like rotation, resize, remove image metadata, let you ignore specific files if you import a collection. Save the output in many different formats (with specific saving parameters like jpg quality, replace transparent background with specific color). The only thing It misses, in my opinion (imo) to make it GOAT is the ability to add/apply imported watermarks/copyright footnotes. A feature that can help visual artist to prepare their images galleries for publication.</p><p>Nonetheless it is already awesome because it helps convert files from annoying formats like .webp, switch .bmp into .png. in one click once the parameter are set.</p><h3 class="relative group">Demo<div id="demo" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#demo" aria-label="Anchor">#</a></span></h3><p>There is a quick demo I found in french but if there is request for it I can post one in English later. I personally use this on the daily especially for posting on sites and whatnot.</p><div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/IYydD3ohyFo?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"/></div><h3 class="relative group">Installing it<div id="installing-it" class="anchor"/><span class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100"><a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#installing-it" aria-label="Anchor">#</a></span></h3><p>There are multiple ways to get it, be it from<strong>Arch</strong> repos or<strong>Flathub</strong>. I will be showing both methods, up to you to choose which you prefer&hellip;</p><ul><li>Arch Repos :</li></ul><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">sudo pacman -S converseen</span></span></code></pre></div><ul><li>Flathub (Flatpak)</li></ul><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">flatpak install net.fasterland.converseen</span></span></code></pre></div><a id="github-bcb0d2da5009533c2e74cc81533f73ad" target="_blank" href="https://github.com/Faster3ck/Converseen" class="cursor-pointer"><div class="w-full md:w-auto pt-3 p-5 border border-neutral-200 dark:border-neutral-700 border rounded-md shadow-2xl"><div class="flex items-center"><span class="text-2xl text-neutral-800 dark:text-neutral" style="margin-right:10px;"><span class="relative block icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"/></svg></span></span><div id="github-bcb0d2da5009533c2e74cc81533f73ad-full_name" class="m-0 font-bold text-xl text-neutral-800 decoration-primary-500 hover:underline hover:underline-offset-2 dark:text-neutral">
Faster3ck/Converseen</div></div><p id="github-bcb0d2da5009533c2e74cc81533f73ad-description" class="m-0 mt-2 text-md text-neutral-800 dark:text-neutral">
Converseen is a batch image converter and resizer</p><div class="m-0 mt-2 flex items-center"><span class="mr-1 inline-block h-3 w-3 rounded-full" style="background-color: #f34b7d"/><div class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
C++</div><span class="text-md mr-1 text-neutral-800 dark:text-neutral"><span class="relative block icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor" d="M287.9 0C297.1 0 305.5 5.25 309.5 13.52L378.1 154.8L531.4 177.5C540.4 178.8 547.8 185.1 550.7 193.7C553.5 202.4 551.2 211.9 544.8 218.2L433.6 328.4L459.9 483.9C461.4 492.9 457.7 502.1 450.2 507.4C442.8 512.7 432.1 513.4 424.9 509.1L287.9 435.9L150.1 509.1C142.9 513.4 133.1 512.7 125.6 507.4C118.2 502.1 114.5 492.9 115.1 483.9L142.2 328.4L31.11 218.2C24.65 211.9 22.36 202.4 25.2 193.7C28.03 185.1 35.5 178.8 44.49 177.5L197.7 154.8L266.3 13.52C270.4 5.249 278.7 0 287.9 0L287.9 0zM287.9 78.95L235.4 187.2C231.9 194.3 225.1 199.3 217.3 200.5L98.98 217.9L184.9 303C190.4 308.5 192.9 316.4 191.6 324.1L171.4 443.7L276.6 387.5C283.7 383.7 292.2 383.7 299.2 387.5L404.4 443.7L384.2 324.1C382.9 316.4 385.5 308.5 391 303L476.9 217.9L358.6 200.5C350.7 199.3 343.9 194.3 340.5 187.2L287.9 78.95z"/></svg></span></span><div id="github-bcb0d2da5009533c2e74cc81533f73ad-stargazers" class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
397</div><span class="text-md mr-1 text-neutral-800 dark:text-neutral"><span class="relative block icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M80 104c13.3 0 24-10.7 24-24s-10.7-24-24-24S56 66.7 56 80s10.7 24 24 24zm80-24c0 32.8-19.7 61-48 73.3V192c0 17.7 14.3 32 32 32H304c17.7 0 32-14.3 32-32V153.3C307.7 141 288 112.8 288 80c0-44.2 35.8-80 80-80s80 35.8 80 80c0 32.8-19.7 61-48 73.3V192c0 53-43 96-96 96H256v70.7c28.3 12.3 48 40.5 48 73.3c0 44.2-35.8 80-80 80s-80-35.8-80-80c0-32.8 19.7-61 48-73.3V288H144c-53 0-96-43-96-96V153.3C19.7 141 0 112.8 0 80C0 35.8 35.8 0 80 0s80 35.8 80 80zm208 24c13.3 0 24-10.7 24-24s-10.7-24-24-24s-24 10.7-24 24s10.7 24 24 24zM248 432c0-13.3-10.7-24-24-24s-24 10.7-24 24s10.7 24 24 24s24-10.7 24-24z"/></svg></span></span><div id="github-bcb0d2da5009533c2e74cc81533f73ad-forks" class="m-0 mr-5 text-md text-neutral-800 dark:text-neutral">
33</div></div></div><script>
fetch("https://api.github.com/repos/Faster3ck/Converseen", {
headers: new Headers({
'User-agent': 'Mozilla/4.0 Custom User Agent'
})
})
.then(response => response.json())
.then(data => {
document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-full_name').innerHTML = data.full_name;
document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-description').innerHTML = data.description;
document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-stargazers').innerHTML = data.stargazers_count;
document.getElementById('github-bcb0d2da5009533c2e74cc81533f73ad-forks').innerHTML = data.forks;
})
.catch(error => console.error(error))</script></a><p>Have fun :heart:</p>
]]></content:encoded><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"/></channel></rss>